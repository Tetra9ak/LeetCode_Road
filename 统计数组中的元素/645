集合 s 包含从 1 到 n 的整数。不幸的是，因为数据错误，导致集合里面某一个数字复制了成了集合里面的另外一个数字的值，导致集合 丢失了一个数字 并且 有一个数字重复 。
给定一个数组 nums 代表了集合 S 发生错误后的结果。
请你找出重复出现的整数，再找到丢失的整数，将它们以数组的形式返回。

 
示例 1：
输入：nums = [1,2,2,4]
输出：[2,3]

示例 2：
输入：nums = [1,1]
输出：[1,2]
 

提示：
2 <= nums.length <= 104
1 <= nums[i] <= 104



解题思路：
1、对初始nums求和，将初始nums转化为集合后求和
2、两者之差为重复的数
3、生成一个nums长度的从1开始的连续数组并求和，减去初始nums转化为集合后求和的值
4、两者之差为缺失的数

class Solution:
    def findErrorNums(self, nums: List[int]) -> List[int]:
        n1 = sum(nums)-sum(set(nums))
        n2 = sum(range(len(nums)+1))-sum(set(nums))
        return [n1,n2]
