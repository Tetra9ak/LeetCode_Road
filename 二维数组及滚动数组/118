给定一个非负整数 numRows，生成「杨辉三角」的前 numRows 行。
在「杨辉三角」中，每个数是它左上方和右上方的数的和。



示例 1:
输入: numRows = 5
输出: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]

示例 2:
输入: numRows = 1
输出: [[1]]
 

提示:
1 <= numRows <= 30



解题思路：
1、先生成一个空数组
2、循环numRows次
3、生成每一行的空数组
4、按生成算法append每一个数

class Solution(object):
    def generate(self, numRows):
        i=0 #杨辉三角的第i层
        yang=[]
        while(i<numRows):
            j=0 #每层数组的第j个元素
            ceng = []
            while(j<=i):
                if (j==0 or j==i):
                    ceng.append(1)
                else:
                    ceng.append(yang[i-1][j-1]+yang[i-1][j])
                j+=1
            yang.append(ceng)
            i+=1
        return yang
