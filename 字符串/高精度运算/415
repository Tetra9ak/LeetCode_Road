给定两个字符串形式的非负整数 num1 和num2 ，计算它们的和并同样以字符串形式返回。
你不能使用任何內建的用于处理大整数的库（比如 BigInteger）， 也不能直接将输入的字符串转换为整数形式。

 

示例 1：
输入：num1 = "11", num2 = "123"
输出："134"

示例 2：
输入：num1 = "456", num2 = "77"
输出："533"

示例 3：
输入：num1 = "0", num2 = "0"
输出："0"
 

提示：
1 <= num1.length, num2.length <= 104
num1 和num2 都只包含数字 0-9
num1 和num2 都不包含任何前导零


解题思路：
1、比较两个字符串的长度，将短的补全到长度一致
2、自后向前依次遍历每一位数字，记录数字和、进位和余数
3、对于最高位，单独记录进位后添加到ans的首部


class Solution:
    def addStrings(self, num1: str, num2: str) -> str:
        length_1 = len(num1)
        length_2 = len(num2)
        if length_1 < length_2:
            num1 = '0' * (length_2-length_1) + num1
        else:
            num2 = '0' * (length_1-length_2) + num2
        upper = 0
        current = 0
        ans = ""
        for i in range(len(num1)-1,-1,-1):
            result = int(num1[i]) + int(num2[i]) + upper
            current = result % 10
            upper = result // 10
            ans = str(current) + ans
        if upper != 0:
            ans = str(upper) + ans
            return ans
        return ans
