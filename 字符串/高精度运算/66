给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的基础上加一。
最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。
你可以假设除了整数 0 之外，这个整数不会以零开头。

 

示例 1：
输入：digits = [1,2,3]
输出：[1,2,4]
解释：输入数组表示数字 123。

示例 2：
输入：digits = [4,3,2,1]
输出：[4,3,2,2]
解释：输入数组表示数字 4321。

示例 3：
输入：digits = [0]
输出：[1]
 

提示：
1 <= digits.length <= 100
0 <= digits[i] <= 9

解题思路：
1、若最后一位<9，直接+1并输出
2、若最后一位=9，从后向前依次遍历各个数位
  1)若该位置的数=9，使之变为0
  2)若该位置的数<9，使之+1并直接输出
3、如果整个循环遍历结束，在首位添加1位1


class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
        if digits[-1] < 9:
            digits[-1] += 1
            return digits
        for i in range(-1, -(len(digits)+1), -1):
            if digits[i] >= 9:
                digits[i] = 0
            else:
                digits[i] += 1
                return digits
        return [1] + digits
