给定字符串列表 strs ，返回其中 最长的特殊序列 的长度。如果最长特殊序列不存在，返回 -1 。
特殊序列 定义如下：该序列为某字符串 独有的子序列（即不能是其他字符串的子序列）。
s 的 子序列可以通过删去字符串 s 中的某些字符实现。

例如，"abc" 是 "aebdc" 的子序列，因为您可以删除"aebdc"中的下划线字符来得到 "abc" 。"aebdc"的子序列还包括"aebdc"、 "aeb" 和 "" (空字符串)。
 

示例 1：
输入: strs = ["aba","cdc","eae"]
输出: 3

示例 2:
输入: strs = ["aaa","aaa","aa"]
输出: -1
 

提示:
2 <= strs.length <= 50
1 <= strs[i].length <= 10
strs[i] 只包含小写英文字母


解题思路：
1、按从小到大的顺序排列strs
2、从后向前按序遍历字符串元素
  1)若相邻两个字符串元素相同，直接跳过
  2)若不同，遍历该位置字符串及其后面所有的字符串
    b)若为另一个字符串的子串，继续遍历


class Solution:
    def findLUSlength(self, strs: List[str]) -> int:
        n = len(strs)
        strs.sort(key = lambda x:(len(x),x))
        i = n-1
        while i>=0:
            if i>0 and strs[i]==strs[i-1]:
                i -= 2
            else:
                match = True
                for j in range(i+1,n):
                    idx = 0
                    jdx = 0
                    while idx<len(strs[i]) and jdx<len(strs[j]):
                        if strs[i][idx]==strs[j][jdx]:
                            idx += 1
                        jdx += 1
                    if idx==len(strs[i]):
                        i -= 1
                        match = False
                        break
                if match:
                    return len(strs[i])
        return -1 
