将非负整数 num 转换为其对应的英文表示。

示例 1：
输入：num = 123
输出："One Hundred Twenty Three"

示例 2：
输入：num = 12345
输出："Twelve Thousand Three Hundred Forty Five"

示例 3：
输入：num = 1234567
输出："One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"
 

提示：
0 <= num <= 231 - 1

解题思路：
1、将0-19和20、30等数字分别编入dict1和dict2中，使得其能表示100内的任意数字
2、将数字每三位(1000)进行分段，每一段单独处理


class Solution:
    def numberToWords(self, num):
        d1 = ["Zero", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"]
        d2 = ["", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"]
        if num<20:
            return d1[num]
        def part(num):
            ans = ''
            if num>=100:
                ans+=d1[num//100]+' Hundred'
                num%=100
            if num>=20:
                if ans:
                    ans+=' '
                ans+=d2[num//10]
                num%=10
            if num!=0:
                if ans:
                    ans+=' '
                ans+=d1[num]
            return ans
        res=''
        array=[0,0,0,0]
        i=3
        while i>=0:
            array[i]=num%1000
            num=num//1000
            i-=1
        i=0
        while i<=3:
            tmp=''
            if array[i]!=0:
                tmp=part(array[i])
            else:
                i+=1
                continue
            if i==0:
                res+=tmp+' Billion'
            elif i==1:
                if res:
                    res+=' '
                res+=tmp+' Million'
            elif i==2:
                if res:
                    res+=' '
                res+=tmp+' Thousand'
            else:
                if res:
                    res+=' '
                res+=tmp
            i+=1
        return res
