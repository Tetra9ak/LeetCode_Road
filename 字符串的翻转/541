给定一个字符串 s 和一个整数 k，从字符串开头算起，每计数至 2k 个字符，就反转这 2k 字符中的前 k 个字符。

如果剩余字符少于 k 个，则将剩余字符全部反转。
如果剩余字符小于 2k 但大于或等于 k 个，则反转前 k 个字符，其余字符保持原样。
 

示例 1：
输入：s = "abcdefg", k = 2
输出："bacdfeg"

示例 2：
输入：s = "abcd", k = 2
输出："bacd"
 

提示：
1 <= s.length <= 104
s 仅由小写英文组成
1 <= k <= 104



解题思路：
1、定义一个ans空字符串存放结果，flip用来指定是否翻转
2、因为步长为k所以每次遍历得到的相邻字符串顺序都是不一样的，所以每次遍历都将flip取反
3、每次遍历得到的字符串记为a，经过flip操作后添加到结果上，一次遍历就可以得到结果

class Solution:
    def reverseStr(self, s: str, k: int) -> str:
        flip=1
        ans=''
        for i in range(0,len(s),k):
            a=s[i:i+k]
            flip=-flip
            ans+=a[::flip]
        return ans
